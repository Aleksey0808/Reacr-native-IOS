{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nvar initialState = {\n  name: \"\",\n  mail: \"\",\n  password: \"\"\n};\nexport default function Registration(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isShowKeyboard = _useState2[0],\n    setIsShowKeyboard = _useState2[1];\n  var _useState3 = useState(initialState),\n    _useState4 = _slicedToArray(_useState3, 2),\n    state = _useState4[0],\n    setState = _useState4[1];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  var _useFonts = useFonts({\n      RobotoMedium: require(\"../../assets/fonts/Roboto-Medium.ttf\"),\n      RobotoRegular: require(\"../../assets/fonts/Roboto-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var handleSubmit = function handleSubmit() {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n    console.log(state);\n    setState(initialState);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    children: _jsx(View, {\n      onLayout: onLayoutRootView,\n      style: styles.container,\n      children: _jsx(ImageBackground, {\n        source: require(\"../../assets/photo-BG-2x.jpg\"),\n        style: styles.image,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n          children: _jsxs(View, {\n            style: _objectSpread(_objectSpread({}, styles.formWrapper), Platform.select({\n              ios: {\n                paddingBottom: isShowKeyboard ? 140 : 20\n              },\n              android: {\n                marginTop: isShowKeyboard ? -100 : 0\n              }\n            })),\n            children: [_jsx(View, {\n              style: styles.imgBox,\n              children: _jsx(Image, {\n                style: styles.icon,\n                source: require(\"../../assets/plus.png\")\n              })\n            }), _jsx(Text, {\n              style: styles.title,\n              children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n            }), _jsxs(View, {\n              style: _objectSpread(_objectSpread({}, styles.form), {}, {\n                paddingBottom: isShowKeyboard ? 32 : 45\n              }),\n              children: [_jsx(TextInput, {\n                placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n                style: styles.input,\n                value: state.name,\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                },\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      name: value\n                    });\n                  });\n                }\n              }), _jsx(TextInput, {\n                placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B\",\n                style: styles.input,\n                value: state.mail,\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                },\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      mail: value\n                    });\n                  });\n                }\n              }), _jsx(TextInput, {\n                placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n                style: styles.input,\n                value: state.password,\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                },\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      password: value\n                    });\n                  });\n                }\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: styles.button,\n              activeOpacity: 0.8,\n              onPress: handleSubmit,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.navigate(\"Login\");\n              },\n              children: _jsx(Text, {\n                style: styles.aside,\n                children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0412\\u043E\\u0439\\u0442\\u0438\"\n              })\n            })]\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  formWrapper: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#ecf0f1\",\n    paddingTop: 100,\n    backgroundColor: \"#FFFFFF\",\n    borderTopRightRadius: 25,\n    borderTopLeftRadius: 25,\n    justifyContent: \"center\"\n  },\n  input: {\n    fontFamily: \"RobotoRegular\",\n    width: 300,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"black\",\n    marginBottom: 10,\n    borderRadius: 15\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    width: 300,\n    backgroundColor: \"#FF6C00\",\n    height: 61,\n    borderRadius: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonText: {\n    fontFamily: \"RobotoRegular\",\n    lineHeight: 19,\n    color: \"#FFFFFF\"\n  },\n  aside: {\n    lineHeight: 19,\n    marginTop: 16,\n    textAlign: \"center\",\n    color: \"#1B4371\"\n  },\n  icon: {\n    fontFamily: \"RobotoRegular\",\n    position: \"absolute\",\n    left: \"90%\",\n    top: \"65%\",\n    width: 25,\n    height: 25,\n    borderRadius: '100%',\n    borderWidth: 1,\n    borderColor: \"#FF6C00\"\n  },\n  imgBox: {\n    position: \"absolute\",\n    left: \"35%\",\n    top: \"-15%\",\n    width: 120,\n    height: 120,\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 16\n  },\n  title: {\n    fontFamily: \"RobotoMedium\",\n    fontSize: 30,\n    lineHeight: 35,\n    letterSpacing: 0.16,\n    color: \"#212121\",\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["React","useState","useCallback","StyleSheet","View","TextInput","TouchableWithoutFeedback","Keyboard","KeyboardAvoidingView","Platform","Alert","TouchableOpacity","Text","ImageBackground","Image","useFonts","SplashScreen","jsx","_jsx","jsxs","_jsxs","preventAutoHideAsync","initialState","name","mail","password","Registration","_ref","navigation","_useState","_useState2","_slicedToArray","isShowKeyboard","setIsShowKeyboard","_useState3","_useState4","state","setState","onLayoutRootView","_asyncToGenerator","fontsLoaded","hideAsync","_useFonts","RobotoMedium","require","RobotoRegular","_useFonts2","handleSubmit","dismiss","console","log","onPress","children","onLayout","style","styles","container","source","image","behavior","OS","_objectSpread","formWrapper","select","ios","paddingBottom","android","marginTop","imgBox","icon","title","form","placeholder","input","value","onFocus","onChangeText","prevState","button","activeOpacity","buttonText","navigate","aside","create","flex","alignItems","justifyContent","backgroundColor","paddingTop","borderTopRightRadius","borderTopLeftRadius","fontFamily","width","height","padding","borderWidth","borderColor","marginBottom","borderRadius","resizeMode","lineHeight","color","textAlign","position","left","top","fontSize","letterSpacing"],"sources":["/Users/admin/Desktop/goit/react-native/Reacr-native-IOS/src/Screens/RegistrationScreen.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  TouchableWithoutFeedback,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform, \n  Alert,\n  TouchableOpacity,\n  Text,\n  ImageBackground,\n  Image,\n} from \"react-native\";\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\n\nSplashScreen.preventAutoHideAsync();\n\nconst initialState = {\n  name: \"\",\n  mail: \"\",\n  password: \"\",\n};\n\nexport default function Registration({ navigation }) {\n  const [isShowKeyboard, setIsShowKeyboard] = useState(false);\n  const [state, setState] = useState(initialState);\n\n  const onLayoutRootView = useCallback(async () => {\n  if (fontsLoaded) {\n    await SplashScreen.hideAsync();\n  }\n}, [fontsLoaded]);\n\n  const [fontsLoaded] = useFonts({\n    RobotoMedium: require(\"../../assets/fonts/Roboto-Medium.ttf\"),\n   RobotoRegular: require(\"../../assets/fonts/Roboto-Regular.ttf\"),\n});\n\n  const handleSubmit = () => {\n    setIsShowKeyboard(false)\n    Keyboard.dismiss()\n    console.log(state)\n    setState(initialState)\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View \n      onLayout={onLayoutRootView}\n      style={styles.container}>\n      <ImageBackground\n          source={require(\"../../assets/photo-BG-2x.jpg\")}\n          style={styles.image}\n        >\n        \n        <KeyboardAvoidingView\n          behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n        >\n            <View \n                style={{\n                  ...styles.formWrapper,\n\n                  ...Platform.select({\n                    ios: {\n                      paddingBottom: isShowKeyboard ? 140 : 20,\n                    },\n                    android: {\n                      marginTop: isShowKeyboard ? -100 : 0,\n                    },\n                  }),\n                }} \n              >\n                <View style={styles.imgBox}>\n                  <Image\n                    style={styles.icon}\n                    source={require(\"../../assets/plus.png\")}\n                  />\n                </View>\n            <Text style={styles.title}>Регистрация</Text>\n            <View style={{\n                    ...styles.form,\n                    paddingBottom: isShowKeyboard ? 32 : 45,\n                  }}>\n          <TextInput\n            placeholder=\"Логин\"\n            style={styles.input}\n            value={state.name}\n            onFocus={() => {\n              setIsShowKeyboard(true)\n            }}\n            onChangeText={(value) => setState((prevState) => ({...prevState, name: value}))}\n          />\n          <TextInput\n            placeholder=\"Адрес электронной почты\"\n            style={styles.input}\n            value={state.mail}\n            onFocus={() => {\n              setIsShowKeyboard(true)\n            }}\n            onChangeText={(value) => setState((prevState) => ({...prevState, mail: value}))}\n          />\n          <TextInput\n            placeholder=\"Пароль\"\n            \n            style={styles.input}\n            value={state.password}\n            onFocus={() => {\n              setIsShowKeyboard(true)\n            }}\n            onChangeText={(value) => setState((prevState) => ({...prevState, password: value}))}\n          />\n          </View>\n          <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.8}\n                    onPress={handleSubmit}\n                  >\n                    <Text style={styles.buttonText}>Зарегистрироваться</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => navigation.navigate(\"Login\")}>\n                    <Text style={styles.aside}>Уже есть аккаунт? Войти</Text>\n            </TouchableOpacity>\n          </View>\n        </KeyboardAvoidingView>\n        \n        \n        </ImageBackground>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n   \n  },\n  formWrapper: {\n     alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#ecf0f1\",\n    paddingTop: 100,\n    \n    backgroundColor: \"#FFFFFF\",\n    borderTopRightRadius: 25,\n    borderTopLeftRadius: 25,\n    justifyContent: \"center\",\n  },\n  input: {\n    fontFamily: \"RobotoRegular\",\n    width: 300,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"black\",\n    marginBottom: 10,\n    borderRadius: 15,\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    width: 300,\n    backgroundColor: \"#FF6C00\",\n    height: 61,\n    borderRadius: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  buttonText: {\n    fontFamily: \"RobotoRegular\",\n    lineHeight: 19,\n    color: \"#FFFFFF\",\n  },\n  aside: {\n    lineHeight: 19,\n    marginTop: 16,\n    textAlign: \"center\",\n    color: \"#1B4371\",\n  },\n  icon: {\n    fontFamily: \"RobotoRegular\",\n    position: \"absolute\",\n    left: \"90%\",\n    top: \"65%\",\n    width: 25,\n    height: 25,\n    borderRadius: '100%',\n    borderWidth: 1,\n    borderColor: \"#FF6C00\",\n  },\n  imgBox: {\n    position: \"absolute\",\n    left: \"35%\",\n    top: \"-15%\",\n    width: 120,\n    height: 120,\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 16,\n  },\n  title: {\n    fontFamily: \"RobotoMedium\",\n    fontSize: 30,\n    lineHeight: 35,\n    letterSpacing: 0.16,\n    color: \"#212121\",\n\n    marginBottom: 20,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}