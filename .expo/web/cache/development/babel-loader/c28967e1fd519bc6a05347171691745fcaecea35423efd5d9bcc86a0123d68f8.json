{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _OrientationWebToAPI;\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { SyntheticPlatformEmitter } from '@unimodules/core';\nimport { canUseViewport, canUseEventListeners } from 'fbjs/lib/ExecutionEnvironment';\nimport { Orientation, WebOrientationLock, WebOrientation } from \"./ScreenOrientation.types\";\nimport { getOrientationLockAsync, getOrientationAsync } from \"./ScreenOrientation\";\nvar OrientationLockAPIToWeb = {\n  DEFAULT: WebOrientationLock.NATURAL,\n  ALL: WebOrientationLock.ANY,\n  PORTRAIT: WebOrientationLock.PORTRAIT,\n  PORTRAIT_UP: WebOrientationLock.PORTRAIT_PRIMARY,\n  PORTRAIT_DOWN: WebOrientationLock.PORTRAIT_SECONDARY,\n  LANDSCAPE: WebOrientationLock.LANDSCAPE,\n  LANDSCAPE_LEFT: WebOrientationLock.LANDSCAPE_PRIMARY,\n  LANDSCAPE_RIGHT: WebOrientationLock.LANDSCAPE_SECONDARY\n};\nvar OrientationWebToAPI = (_OrientationWebToAPI = {}, _defineProperty(_OrientationWebToAPI, WebOrientation.PORTRAIT_PRIMARY, Orientation.PORTRAIT_UP), _defineProperty(_OrientationWebToAPI, WebOrientation.PORTRAIT_SECONDARY, Orientation.PORTRAIT_DOWN), _defineProperty(_OrientationWebToAPI, WebOrientation.LANDSCAPE_PRIMARY, Orientation.LANDSCAPE_LEFT), _defineProperty(_OrientationWebToAPI, WebOrientation.LANDSCAPE_SECONDARY, Orientation.LANDSCAPE_RIGHT), _OrientationWebToAPI);\nvar _ref = canUseViewport && window,\n  screen = _ref.screen;\nvar orientation = canUseViewport && (screen.orientation || screen.msOrientation || null);\nfunction emitOrientationEvent() {\n  var _await$Promise$all, _await$Promise$all2, orientationLock, orientationInfo;\n  return _regeneratorRuntime.async(function emitOrientationEvent$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return _regeneratorRuntime.awrap(Promise.all([getOrientationLockAsync(), getOrientationAsync()]));\n      case 2:\n        _await$Promise$all = _context.sent;\n        _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n        orientationLock = _await$Promise$all2[0];\n        orientationInfo = _await$Promise$all2[1];\n        SyntheticPlatformEmitter.emit('expoDidUpdateDimensions', {\n          orientationLock: orientationLock,\n          orientationInfo: orientationInfo\n        });\n      case 7:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nif (canUseEventListeners) {\n  if (orientation) {\n    orientation.addEventListener('change', emitOrientationEvent);\n  } else {\n    window.addEventListener('orientationchange', emitOrientationEvent);\n  }\n}\nfunction _convertToLegacyOrientationLock(orientationLock) {\n  switch (orientationLock) {\n    case WebOrientationLock.UNKNOWN:\n      throw new Error(\"expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock to be converted.\");\n    case WebOrientationLock.ANY:\n      return ['portrait', 'landscape'];\n    case WebOrientationLock.NATURAL:\n      return 'default';\n    default:\n      return orientationLock;\n  }\n}\nfunction _lockAsync(webOrientationLock) {\n  var legacyLock, lockOrientation, isSuccess;\n  return _regeneratorRuntime.async(function _lockAsync$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        if (!(webOrientationLock === WebOrientationLock.UNKNOWN)) {\n          _context2.next = 2;\n          break;\n        }\n        throw new Error(\"expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock that can be applied to the device.\");\n      case 2:\n        if (!(screen.orientation && screen.orientation.lock)) {\n          _context2.next = 7;\n          break;\n        }\n        _context2.next = 5;\n        return _regeneratorRuntime.awrap(screen.orientation.lock(webOrientationLock));\n      case 5:\n        _context2.next = 16;\n        break;\n      case 7:\n        if (!(screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation'])) {\n          _context2.next = 15;\n          break;\n        }\n        legacyLock = _convertToLegacyOrientationLock(webOrientationLock);\n        lockOrientation = screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation'];\n        isSuccess = lockOrientation.call(screen, legacyLock);\n        if (isSuccess) {\n          _context2.next = 13;\n          break;\n        }\n        throw new Error(\"Applying orientation lock: \" + JSON.stringify(webOrientationLock) + \" to device was denied\");\n      case 13:\n        _context2.next = 16;\n        break;\n      case 15:\n        throw new Error(\"expo-screen-orientation: The browser doesn't support locking screen orientation.\");\n      case 16:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, null, Promise);\n}\nvar _lastWebOrientationLock = WebOrientationLock.UNKNOWN;\nexport default {\n  get name() {\n    return 'ExpoScreenOrientation';\n  },\n  supportsOrientationLockAsync: function supportsOrientationLockAsync(orientationLock) {\n    return _regeneratorRuntime.async(function supportsOrientationLockAsync$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", orientationLock in OrientationLockAPIToWeb);\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, null, null, null, Promise);\n  },\n  getPlatformOrientationLockAsync: function getPlatformOrientationLockAsync() {\n    return _regeneratorRuntime.async(function getPlatformOrientationLockAsync$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", _lastWebOrientationLock);\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, null, null, null, Promise);\n  },\n  getOrientationAsync: function getOrientationAsync() {\n    var webOrientation;\n    return _regeneratorRuntime.async(function getOrientationAsync$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          webOrientation = screen['msOrientation'] || (screen.orientation || screen['mozOrientation'] || {}).type;\n          if (webOrientation) {\n            _context5.next = 3;\n            break;\n          }\n          return _context5.abrupt(\"return\", {\n            orientation: Orientation.UNKNOWN\n          });\n        case 3:\n          return _context5.abrupt(\"return\", {\n            orientation: OrientationWebToAPI[webOrientation]\n          });\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, null, null, null, Promise);\n  },\n  lockAsync: function lockAsync(orientationLock) {\n    var webOrientationLock;\n    return _regeneratorRuntime.async(function lockAsync$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          webOrientationLock = OrientationLockAPIToWeb[orientationLock];\n          if (webOrientationLock) {\n            _context6.next = 3;\n            break;\n          }\n          throw new TypeError(\"Invalid Orientation Lock: \" + orientationLock);\n        case 3:\n          _context6.next = 5;\n          return _regeneratorRuntime.awrap(_lockAsync(webOrientationLock));\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, null, null, null, Promise);\n  },\n  lockPlatformAsync: function lockPlatformAsync(webOrientationLock) {\n    return _regeneratorRuntime.async(function lockPlatformAsync$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(_lockAsync(webOrientationLock));\n        case 2:\n          _lastWebOrientationLock = webOrientationLock;\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, null, null, null, Promise);\n  },\n  unlockAsync: function unlockAsync() {\n    var unlockOrientation, isSuccess;\n    return _regeneratorRuntime.async(function unlockAsync$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          if (!(screen.orientation && screen.orientation.unlock)) {\n            _context8.next = 4;\n            break;\n          }\n          screen.orientation.unlock();\n          _context8.next = 12;\n          break;\n        case 4:\n          if (!(screen['unlockOrientation'] || screen['mozUnlockOrientation'] || screen['msUnlockOrientation'])) {\n            _context8.next = 11;\n            break;\n          }\n          unlockOrientation = screen['unlockOrientation'] || screen['mozUnlockOrientation'] || screen['msUnlockOrientation'];\n          isSuccess = unlockOrientation.call(screen);\n          if (isSuccess) {\n            _context8.next = 9;\n            break;\n          }\n          throw new Error(\"Unlocking screen orientation on device was denied\");\n        case 9:\n          _context8.next = 12;\n          break;\n        case 11:\n          throw new Error(\"expo-screen-orientation: The browser doesn't support unlocking screen orientation.\");\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"names":["SyntheticPlatformEmitter","canUseViewport","canUseEventListeners","Orientation","WebOrientationLock","WebOrientation","getOrientationLockAsync","getOrientationAsync","OrientationLockAPIToWeb","DEFAULT","NATURAL","ALL","ANY","PORTRAIT","PORTRAIT_UP","PORTRAIT_PRIMARY","PORTRAIT_DOWN","PORTRAIT_SECONDARY","LANDSCAPE","LANDSCAPE_LEFT","LANDSCAPE_PRIMARY","LANDSCAPE_RIGHT","LANDSCAPE_SECONDARY","OrientationWebToAPI","_OrientationWebToAPI","_defineProperty","_ref","window","screen","orientation","msOrientation","emitOrientationEvent","_await$Promise$all","_await$Promise$all2","orientationLock","orientationInfo","_regeneratorRuntime","async","emitOrientationEvent$","_context","prev","next","awrap","Promise","all","sent","_slicedToArray","emit","stop","addEventListener","_convertToLegacyOrientationLock","UNKNOWN","Error","_lockAsync","webOrientationLock","legacyLock","lockOrientation","isSuccess","_lockAsync$","_context2","lock","call","JSON","stringify","_lastWebOrientationLock","name","supportsOrientationLockAsync","supportsOrientationLockAsync$","_context3","abrupt","getPlatformOrientationLockAsync","getPlatformOrientationLockAsync$","_context4","webOrientation","getOrientationAsync$","_context5","type","lockAsync","lockAsync$","_context6","TypeError","lockPlatformAsync","lockPlatformAsync$","_context7","unlockAsync","unlockOrientation","unlockAsync$","_context8","unlock"],"sources":["/Users/admin/Desktop/goit/react-native/Reacr-native-IOS/node_modules/expo/src/ScreenOrientation/ExpoScreenOrientation.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter } from '@unimodules/core';\nimport { canUseViewport, canUseEventListeners } from 'fbjs/lib/ExecutionEnvironment';\n\nimport {\n  OrientationInfo,\n  Orientation,\n  OrientationLock,\n  WebOrientationLock,\n  WebOrientation,\n} from './ScreenOrientation.types';\n\nimport { getOrientationLockAsync, getOrientationAsync } from './ScreenOrientation';\n\nconst OrientationLockAPIToWeb: {\n  [lock: string]: WebOrientationLock;\n} = {\n  DEFAULT: WebOrientationLock.NATURAL,\n  ALL: WebOrientationLock.ANY,\n  PORTRAIT: WebOrientationLock.PORTRAIT,\n  PORTRAIT_UP: WebOrientationLock.PORTRAIT_PRIMARY,\n  PORTRAIT_DOWN: WebOrientationLock.PORTRAIT_SECONDARY,\n  LANDSCAPE: WebOrientationLock.LANDSCAPE,\n  LANDSCAPE_LEFT: WebOrientationLock.LANDSCAPE_PRIMARY,\n  LANDSCAPE_RIGHT: WebOrientationLock.LANDSCAPE_SECONDARY,\n};\n\nconst OrientationWebToAPI: {\n  [orientationWeb: string]: Orientation;\n} = {\n  [WebOrientation.PORTRAIT_PRIMARY]: Orientation.PORTRAIT_UP,\n  [WebOrientation.PORTRAIT_SECONDARY]: Orientation.PORTRAIT_DOWN,\n  [WebOrientation.LANDSCAPE_PRIMARY]: Orientation.LANDSCAPE_LEFT,\n  [WebOrientation.LANDSCAPE_SECONDARY]: Orientation.LANDSCAPE_RIGHT,\n};\n\ndeclare const window: Window;\n\nconst { screen } = canUseViewport && window;\nconst orientation: ScreenOrientation | null =\n  canUseViewport && (screen.orientation || (screen as any).msOrientation || null);\n\nasync function emitOrientationEvent() {\n  const [orientationLock, orientationInfo] = await Promise.all([\n    getOrientationLockAsync(),\n    getOrientationAsync(),\n  ]);\n  SyntheticPlatformEmitter.emit('expoDidUpdateDimensions', {\n    orientationLock,\n    orientationInfo,\n  });\n}\n\nif (canUseEventListeners) {\n  if (orientation) {\n    orientation.addEventListener('change', emitOrientationEvent);\n  } else {\n    window.addEventListener('orientationchange', emitOrientationEvent);\n  }\n}\n\nfunction _convertToLegacyOrientationLock(orientationLock: WebOrientationLock): string | string[] {\n  switch (orientationLock) {\n    case WebOrientationLock.UNKNOWN:\n      throw new Error(\n        `expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock to be converted.`\n      );\n    case WebOrientationLock.ANY:\n      return ['portrait', 'landscape'];\n    case WebOrientationLock.NATURAL:\n      return 'default';\n    default:\n      return orientationLock;\n  }\n}\n\nasync function _lockAsync(webOrientationLock: WebOrientationLock): Promise<void> {\n  if (webOrientationLock === WebOrientationLock.UNKNOWN) {\n    throw new Error(\n      `expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock that can be applied to the device.`\n    );\n  }\n  if (screen.orientation && screen.orientation.lock) {\n    await screen.orientation.lock(webOrientationLock);\n  } else if (\n    screen['lockOrientation'] ||\n    screen['mozLockOrientation'] ||\n    screen['msLockOrientation']\n  ) {\n    const legacyLock = _convertToLegacyOrientationLock(webOrientationLock);\n    const lockOrientation =\n      screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation'];\n    // correct `this` context must be passed in otherwise method call is disallowed by browser\n    const isSuccess = lockOrientation.call(screen, legacyLock);\n    if (!isSuccess) {\n      throw new Error(\n        `Applying orientation lock: ${JSON.stringify(webOrientationLock)} to device was denied`\n      );\n    }\n  } else {\n    throw new Error(\n      `expo-screen-orientation: The browser doesn't support locking screen orientation.`\n    );\n  }\n}\n\nlet _lastWebOrientationLock: WebOrientationLock = WebOrientationLock.UNKNOWN;\n\nexport default {\n  get name(): string {\n    return 'ExpoScreenOrientation';\n  },\n  async supportsOrientationLockAsync(orientationLock: OrientationLock): Promise<boolean> {\n    return orientationLock in OrientationLockAPIToWeb;\n  },\n  async getPlatformOrientationLockAsync(): Promise<WebOrientationLock> {\n    return _lastWebOrientationLock;\n  },\n  async getOrientationAsync(): Promise<OrientationInfo> {\n    const webOrientation =\n      screen['msOrientation'] || (screen.orientation || screen['mozOrientation'] || {}).type;\n    if (!webOrientation) {\n      return {\n        orientation: Orientation.UNKNOWN,\n      };\n    }\n    return {\n      orientation: OrientationWebToAPI[webOrientation],\n    };\n  },\n  async lockAsync(orientationLock: OrientationLock): Promise<void> {\n    const webOrientationLock = OrientationLockAPIToWeb[orientationLock];\n    if (!webOrientationLock) {\n      throw new TypeError(`Invalid Orientation Lock: ${orientationLock}`);\n    }\n    await _lockAsync(webOrientationLock);\n  },\n  async lockPlatformAsync(webOrientationLock: WebOrientationLock): Promise<void> {\n    await _lockAsync(webOrientationLock);\n    _lastWebOrientationLock = webOrientationLock;\n  },\n  async unlockAsync(): Promise<void> {\n    if (screen.orientation && screen.orientation.unlock) {\n      screen.orientation.unlock();\n    } else if (\n      screen['unlockOrientation'] ||\n      screen['mozUnlockOrientation'] ||\n      screen['msUnlockOrientation']\n    ) {\n      const unlockOrientation =\n        screen['unlockOrientation'] ||\n        screen['mozUnlockOrientation'] ||\n        screen['msUnlockOrientation'];\n      // correct `this` context must be passed in otherwise method call is disallowed by browser\n      const isSuccess = unlockOrientation.call(screen);\n      if (!isSuccess) {\n        throw new Error(`Unlocking screen orientation on device was denied`);\n      }\n    } else {\n      throw new Error(\n        `expo-screen-orientation: The browser doesn't support unlocking screen orientation.`\n      );\n    }\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}