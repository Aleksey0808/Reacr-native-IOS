{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var IS_MANAGED_ENV = false;\nexport var manifestBaseUrl = null;\nexport function downloadAsync(uri, hash, type, name) {\n  return _regeneratorRuntime.async(function downloadAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        return _context.abrupt(\"return\", uri);\n      case 1:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function getManifest() {\n  return {};\n}","map":{"version":3,"names":["IS_MANAGED_ENV","manifestBaseUrl","downloadAsync","uri","hash","type","name","_regeneratorRuntime","async","downloadAsync$","_context","prev","next","abrupt","stop","Promise","getManifest"],"sources":["/Users/admin/Desktop/goit/react-native/Reacr-native-IOS/node_modules/expo-asset/src/PlatformUtils.web.ts"],"sourcesContent":["export const IS_MANAGED_ENV = false;\n\n// Compute manifest base URL if available\nexport const manifestBaseUrl = null;\n\nexport async function downloadAsync(uri, hash, type, name): Promise<string> {\n  return uri;\n}\n\nexport function getManifest() {\n  return {};\n}\n"],"mappings":";AAAA,OAAO,IAAMA,cAAc,GAAG,KAAK;AAGnC,OAAO,IAAMC,eAAe,GAAG,IAAI;AAEnC,OAAO,SAAeC,aAAaA,CAACC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,eAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAA,OAAAF,QAAA,CAAAG,MAAA,WAChDV,GAAG;MAAA;MAAA;QAAA,OAAAO,QAAA,CAAAI,IAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAGZ,OAAM,SAAUC,WAAWA,CAAA;EACzB,OAAO,EAAE;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}