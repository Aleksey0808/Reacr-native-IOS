{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExponentWebBrowser from \"./ExpoWebBrowser\";\nvar emptyCustomTabsPackages = {\n  defaultBrowserPackage: undefined,\n  preferredBrowserPackage: undefined,\n  browserPackages: [],\n  servicePackages: []\n};\nexport function getCustomTabsSupportingBrowsersAsync() {\n  return _regeneratorRuntime.async(function getCustomTabsSupportingBrowsersAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        if (ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync) {\n          _context.next = 2;\n          break;\n        }\n        throw new UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n      case 2:\n        if (!(Platform.OS !== 'android')) {\n          _context.next = 6;\n          break;\n        }\n        return _context.abrupt(\"return\", emptyCustomTabsPackages);\n      case 6:\n        _context.next = 8;\n        return _regeneratorRuntime.awrap(ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync());\n      case 8:\n        return _context.abrupt(\"return\", _context.sent);\n      case 9:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function warmUpAsync(browserPackage) {\n  return _regeneratorRuntime.async(function warmUpAsync$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        if (ExponentWebBrowser.warmUpAsync) {\n          _context2.next = 2;\n          break;\n        }\n        throw new UnavailabilityError('WebBrowser', 'warmUpAsync');\n      case 2:\n        if (!(Platform.OS !== 'android')) {\n          _context2.next = 6;\n          break;\n        }\n        return _context2.abrupt(\"return\", {});\n      case 6:\n        _context2.next = 8;\n        return _regeneratorRuntime.awrap(ExponentWebBrowser.warmUpAsync(browserPackage));\n      case 8:\n        return _context2.abrupt(\"return\", _context2.sent);\n      case 9:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function mayInitWithUrlAsync(url, browserPackage) {\n  return _regeneratorRuntime.async(function mayInitWithUrlAsync$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        if (ExponentWebBrowser.mayInitWithUrlAsync) {\n          _context3.next = 2;\n          break;\n        }\n        throw new UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n      case 2:\n        if (!(Platform.OS !== 'android')) {\n          _context3.next = 6;\n          break;\n        }\n        return _context3.abrupt(\"return\", {});\n      case 6:\n        _context3.next = 8;\n        return _regeneratorRuntime.awrap(ExponentWebBrowser.mayInitWithUrlAsync(url, browserPackage));\n      case 8:\n        return _context3.abrupt(\"return\", _context3.sent);\n      case 9:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function coolDownAsync(browserPackage) {\n  return _regeneratorRuntime.async(function coolDownAsync$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        if (ExponentWebBrowser.coolDownAsync) {\n          _context4.next = 2;\n          break;\n        }\n        throw new UnavailabilityError('WebBrowser', 'coolDownAsync');\n      case 2:\n        if (!(Platform.OS !== 'android')) {\n          _context4.next = 6;\n          break;\n        }\n        return _context4.abrupt(\"return\", {});\n      case 6:\n        _context4.next = 8;\n        return _regeneratorRuntime.awrap(ExponentWebBrowser.coolDownAsync(browserPackage));\n      case 8:\n        return _context4.abrupt(\"return\", _context4.sent);\n      case 9:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function openBrowserAsync(url) {\n  var browserParams,\n    _args5 = arguments;\n  return _regeneratorRuntime.async(function openBrowserAsync$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        browserParams = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n        if (ExponentWebBrowser.openBrowserAsync) {\n          _context5.next = 3;\n          break;\n        }\n        throw new UnavailabilityError('WebBrowser', 'openBrowserAsync');\n      case 3:\n        _context5.next = 5;\n        return _regeneratorRuntime.awrap(ExponentWebBrowser.openBrowserAsync(url, browserParams));\n      case 5:\n        return _context5.abrupt(\"return\", _context5.sent);\n      case 6:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function dismissBrowser() {\n  if (!ExponentWebBrowser.dismissBrowser) {\n    throw new UnavailabilityError('WebBrowser', 'dismissBrowser');\n  }\n  ExponentWebBrowser.dismissBrowser();\n}\nexport function openAuthSessionAsync(url, redirectUrl) {\n  return _regeneratorRuntime.async(function openAuthSessionAsync$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        if (!_authSessionIsNativelySupported()) {\n          _context6.next = 6;\n          break;\n        }\n        if (ExponentWebBrowser.openAuthSessionAsync) {\n          _context6.next = 3;\n          break;\n        }\n        throw new UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n      case 3:\n        return _context6.abrupt(\"return\", ExponentWebBrowser.openAuthSessionAsync(url, redirectUrl));\n      case 6:\n        return _context6.abrupt(\"return\", _openAuthSessionPolyfillAsync(url, redirectUrl));\n      case 7:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function dismissAuthSession() {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.dismissAuthSession) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissAuthSession();\n  } else {\n    if (!ExponentWebBrowser.dismissBrowser) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissBrowser();\n  }\n}\nfunction _authSessionIsNativelySupported() {\n  if (Platform.OS === 'android') {\n    return false;\n  }\n  var versionNumber = parseInt(String(Platform.Version), 10);\n  return versionNumber >= 11;\n}\nvar _redirectHandler = null;\nvar _onWebBrowserCloseAndroid = null;\nfunction _onAppStateChangeAndroid(state) {\n  if (state === 'active' && _onWebBrowserCloseAndroid) {\n    _onWebBrowserCloseAndroid();\n  }\n}\nfunction _openBrowserAndWaitAndroidAsync(startUrl) {\n  var appStateChangedToActive, result, _await$openBrowserAsy, type;\n  return _regeneratorRuntime.async(function _openBrowserAndWaitAndroidAsync$(_context7) {\n    while (1) switch (_context7.prev = _context7.next) {\n      case 0:\n        appStateChangedToActive = new Promise(function (resolve) {\n          _onWebBrowserCloseAndroid = resolve;\n          AppState.addEventListener('change', _onAppStateChangeAndroid);\n        });\n        result = {\n          type: 'cancel'\n        };\n        _context7.next = 4;\n        return _regeneratorRuntime.awrap(openBrowserAsync(startUrl));\n      case 4:\n        _await$openBrowserAsy = _context7.sent;\n        type = _await$openBrowserAsy.type;\n        if (!(type === 'opened')) {\n          _context7.next = 10;\n          break;\n        }\n        _context7.next = 9;\n        return _regeneratorRuntime.awrap(appStateChangedToActive);\n      case 9:\n        result = {\n          type: 'dismiss'\n        };\n      case 10:\n        AppState.removeEventListener('change', _onAppStateChangeAndroid);\n        _onWebBrowserCloseAndroid = null;\n        return _context7.abrupt(\"return\", result);\n      case 13:\n      case \"end\":\n        return _context7.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction _openAuthSessionPolyfillAsync(startUrl, returnUrl) {\n  return _regeneratorRuntime.async(function _openAuthSessionPolyfillAsync$(_context8) {\n    while (1) switch (_context8.prev = _context8.next) {\n      case 0:\n        if (!_redirectHandler) {\n          _context8.next = 2;\n          break;\n        }\n        throw new Error(\"The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be\");\n      case 2:\n        if (!_onWebBrowserCloseAndroid) {\n          _context8.next = 4;\n          break;\n        }\n        throw new Error(\"WebBrowser is already open, only one can be open at a time\");\n      case 4:\n        _context8.prev = 4;\n        if (!(Platform.OS === 'android')) {\n          _context8.next = 11;\n          break;\n        }\n        _context8.next = 8;\n        return _regeneratorRuntime.awrap(Promise.race([_openBrowserAndWaitAndroidAsync(startUrl), _waitForRedirectAsync(returnUrl)]));\n      case 8:\n        return _context8.abrupt(\"return\", _context8.sent);\n      case 11:\n        _context8.next = 13;\n        return _regeneratorRuntime.awrap(Promise.race([openBrowserAsync(startUrl), _waitForRedirectAsync(returnUrl)]));\n      case 13:\n        return _context8.abrupt(\"return\", _context8.sent);\n      case 14:\n        _context8.prev = 14;\n        if (ExponentWebBrowser.dismissBrowser) {\n          ExponentWebBrowser.dismissBrowser();\n        }\n        _stopWaitingForRedirect();\n        return _context8.finish(14);\n      case 18:\n      case \"end\":\n        return _context8.stop();\n    }\n  }, null, null, [[4,, 14, 18]], Promise);\n}\nfunction _stopWaitingForRedirect() {\n  if (!_redirectHandler) {\n    throw new Error(\"The WebBrowser auth session is in an invalid state with no redirect handler when one should be set\");\n  }\n  Linking.removeEventListener('url', _redirectHandler);\n  _redirectHandler = null;\n}\nfunction _waitForRedirectAsync(returnUrl) {\n  return new Promise(function (resolve) {\n    _redirectHandler = function _redirectHandler(event) {\n      if (event.url.startsWith(returnUrl)) {\n        resolve({\n          url: event.url,\n          type: 'success'\n        });\n      }\n    };\n    Linking.addEventListener('url', _redirectHandler);\n  });\n}","map":{"version":3,"names":["UnavailabilityError","ExponentWebBrowser","emptyCustomTabsPackages","defaultBrowserPackage","undefined","preferredBrowserPackage","browserPackages","servicePackages","getCustomTabsSupportingBrowsersAsync","_regeneratorRuntime","async","getCustomTabsSupportingBrowsersAsync$","_context","prev","next","Platform","OS","abrupt","awrap","sent","stop","Promise","warmUpAsync","browserPackage","warmUpAsync$","_context2","mayInitWithUrlAsync","url","mayInitWithUrlAsync$","_context3","coolDownAsync","coolDownAsync$","_context4","openBrowserAsync","browserParams","_args5","arguments","openBrowserAsync$","_context5","length","dismissBrowser","openAuthSessionAsync","redirectUrl","openAuthSessionAsync$","_context6","_authSessionIsNativelySupported","_openAuthSessionPolyfillAsync","dismissAuthSession","versionNumber","parseInt","String","Version","_redirectHandler","_onWebBrowserCloseAndroid","_onAppStateChangeAndroid","state","_openBrowserAndWaitAndroidAsync","startUrl","appStateChangedToActive","result","_await$openBrowserAsy","type","_openBrowserAndWaitAndroidAsync$","_context7","resolve","AppState","addEventListener","removeEventListener","returnUrl","_openAuthSessionPolyfillAsync$","_context8","Error","race","_waitForRedirectAsync","_stopWaitingForRedirect","finish","Linking","event","startsWith"],"sources":["/Users/admin/Desktop/goit/react-native/Reacr-native-IOS/node_modules/expo-web-browser/src/WebBrowser.ts"],"sourcesContent":["import { AppState, Linking, Platform, AppStateStatus } from 'react-native';\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExponentWebBrowser from './ExpoWebBrowser';\n\nimport {\n  RedirectEvent,\n  OpenBrowserOptions,\n  AuthSessionResult,\n  CustomTabsBrowsersResults,\n  BrowserResult,\n  RedirectResult,\n  MayInitWithUrlResult,\n  WarmUpResult,\n  CoolDownResult,\n} from './WebBrowser.types';\n\nconst emptyCustomTabsPackages: CustomTabsBrowsersResults = {\n  defaultBrowserPackage: undefined,\n  preferredBrowserPackage: undefined,\n  browserPackages: [],\n  servicePackages: [],\n};\n\nexport async function getCustomTabsSupportingBrowsersAsync(): Promise<CustomTabsBrowsersResults> {\n  if (!ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync) {\n    throw new UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return emptyCustomTabsPackages;\n  } else {\n    return await ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync();\n  }\n}\n\nexport async function warmUpAsync(browserPackage?: string): Promise<WarmUpResult> {\n  if (!ExponentWebBrowser.warmUpAsync) {\n    throw new UnavailabilityError('WebBrowser', 'warmUpAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.warmUpAsync(browserPackage);\n  }\n}\n\nexport async function mayInitWithUrlAsync(\n  url: string,\n  browserPackage?: string\n): Promise<MayInitWithUrlResult> {\n  if (!ExponentWebBrowser.mayInitWithUrlAsync) {\n    throw new UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.mayInitWithUrlAsync(url, browserPackage);\n  }\n}\n\nexport async function coolDownAsync(browserPackage?: string): Promise<CoolDownResult> {\n  if (!ExponentWebBrowser.coolDownAsync) {\n    throw new UnavailabilityError('WebBrowser', 'coolDownAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.coolDownAsync(browserPackage);\n  }\n}\n\nexport async function openBrowserAsync(\n  url: string,\n  browserParams: OpenBrowserOptions = {}\n): Promise<BrowserResult> {\n  if (!ExponentWebBrowser.openBrowserAsync) {\n    throw new UnavailabilityError('WebBrowser', 'openBrowserAsync');\n  }\n  return await ExponentWebBrowser.openBrowserAsync(url, browserParams);\n}\n\nexport function dismissBrowser(): void {\n  if (!ExponentWebBrowser.dismissBrowser) {\n    throw new UnavailabilityError('WebBrowser', 'dismissBrowser');\n  }\n  ExponentWebBrowser.dismissBrowser();\n}\n\nexport async function openAuthSessionAsync(\n  url: string,\n  redirectUrl: string\n): Promise<AuthSessionResult> {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.openAuthSessionAsync) {\n      throw new UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n    }\n    return ExponentWebBrowser.openAuthSessionAsync(url, redirectUrl);\n  } else {\n    return _openAuthSessionPolyfillAsync(url, redirectUrl);\n  }\n}\n\nexport function dismissAuthSession(): void {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.dismissAuthSession) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissAuthSession();\n  } else {\n    if (!ExponentWebBrowser.dismissBrowser) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissBrowser();\n  }\n}\n\n/* iOS <= 10 and Android polyfill for SFAuthenticationSession flow */\n\nfunction _authSessionIsNativelySupported(): boolean {\n  if (Platform.OS === 'android') {\n    return false;\n  }\n\n  const versionNumber = parseInt(String(Platform.Version), 10);\n  return versionNumber >= 11;\n}\n\nlet _redirectHandler: ((event: RedirectEvent) => void) | null = null;\n\n/*\n * openBrowserAsync on Android doesn't wait until closed, so we need to polyfill\n * it with AppState\n */\n\n// Store the `resolve` function from a Promise to fire when the AppState\n// returns to active\nlet _onWebBrowserCloseAndroid: null | (() => void) = null;\n\nfunction _onAppStateChangeAndroid(state: AppStateStatus) {\n  if (state === 'active' && _onWebBrowserCloseAndroid) {\n    _onWebBrowserCloseAndroid();\n  }\n}\n\nasync function _openBrowserAndWaitAndroidAsync(startUrl: string): Promise<BrowserResult> {\n  let appStateChangedToActive = new Promise(resolve => {\n    _onWebBrowserCloseAndroid = resolve;\n    AppState.addEventListener('change', _onAppStateChangeAndroid);\n  });\n\n  let result: BrowserResult = { type: 'cancel' };\n  let { type } = await openBrowserAsync(startUrl);\n\n  if (type === 'opened') {\n    await appStateChangedToActive;\n    result = { type: 'dismiss' };\n  }\n\n  AppState.removeEventListener('change', _onAppStateChangeAndroid);\n  _onWebBrowserCloseAndroid = null;\n  return result;\n}\n\nasync function _openAuthSessionPolyfillAsync(\n  startUrl: string,\n  returnUrl: string\n): Promise<AuthSessionResult> {\n  if (_redirectHandler) {\n    throw new Error(\n      `The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be`\n    );\n  }\n\n  if (_onWebBrowserCloseAndroid) {\n    throw new Error(`WebBrowser is already open, only one can be open at a time`);\n  }\n\n  try {\n    if (Platform.OS === 'android') {\n      return await Promise.race([\n        _openBrowserAndWaitAndroidAsync(startUrl),\n        _waitForRedirectAsync(returnUrl),\n      ]);\n    } else {\n      return await Promise.race([openBrowserAsync(startUrl), _waitForRedirectAsync(returnUrl)]);\n    }\n  } finally {\n    // We can't dismiss the browser on Android, only call this when it's available.\n    // Users on Android need to manually press the 'x' button in Chrome Custom Tabs, sadly.\n    if (ExponentWebBrowser.dismissBrowser) {\n      ExponentWebBrowser.dismissBrowser();\n    }\n\n    _stopWaitingForRedirect();\n  }\n}\n\nfunction _stopWaitingForRedirect() {\n  if (!_redirectHandler) {\n    throw new Error(\n      `The WebBrowser auth session is in an invalid state with no redirect handler when one should be set`\n    );\n  }\n\n  Linking.removeEventListener('url', _redirectHandler);\n  _redirectHandler = null;\n}\n\nfunction _waitForRedirectAsync(returnUrl: string): Promise<RedirectResult> {\n  return new Promise(resolve => {\n    _redirectHandler = (event: RedirectEvent) => {\n      if (event.url.startsWith(returnUrl)) {\n        resolve({ url: event.url, type: 'success' });\n      }\n    };\n\n    Linking.addEventListener('url', _redirectHandler);\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}