{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    mail = _useState4[0],\n    setMail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var nameHandler = function nameHandler(text) {\n    return setName(text);\n  };\n  var mailHandler = function mailHandler(text) {\n    return setMail(text);\n  };\n  var passwordHandler = function passwordHandler(text) {\n    return setPassword(text);\n  };\n  var handleSubmit = function handleSubmit() {\n    Alert.alert(\"Credentials\", name + \" \" + mail + \" \" + password);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ImageBackground, {\n        source: require(\"../../assets/photo-BG-2x.jpg\"),\n        style: styles.image,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n          children: _jsxs(View, {\n            style: styles.formWrapper,\n            children: [_jsx(Text, {\n              children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n            }), _jsx(TextInput, {\n              value: name,\n              onChangeText: nameHandler,\n              placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n              style: styles.input\n            }), _jsx(TextInput, {\n              value: mail,\n              onChangeText: mailHandler,\n              placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B\",\n              style: styles.input\n            }), _jsx(TextInput, {\n              value: password,\n              onChangeText: passwordHandler,\n              placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n              secureTextEntry: true,\n              style: styles.input\n            }), _jsxs(TouchableOpacity, {\n              style: styles.button,\n              activeOpacity: 0.8,\n              onPress: handleSubmit,\n              children: [_jsx(Text, {\n                style: styles.buttonText,\n                children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n              }), _jsx(TouchableOpacity, {\n                children: _jsx(Text, {\n                  style: styles.aside,\n                  children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0412\\u043E\\u0439\\u0442\\u0438\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  formWrapper: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#ecf0f1\",\n    paddingTop: 150,\n    paddingBottom: 150,\n    backgroundColor: \"#FFFFFF\",\n    borderTopRightRadius: 25,\n    borderTopLeftRadius: 25,\n    justifyContent: \"center\"\n  },\n  input: {\n    width: 300,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"black\",\n    marginBottom: 10\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    width: 300,\n    marginTop: 43,\n    backgroundColor: \"#FF6C00\",\n    height: 61,\n    borderRadius: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonText: {\n    fontStyle: \"normal\",\n    lineHeight: 19,\n    color: \"#FFFFFF\"\n  },\n  aside: {\n    fontFamily: \"RobotoRegular\",\n    fontStyle: \"normal\",\n    lineHeight: 19,\n    marginTop: 16,\n    textAlign: \"center\",\n    color: \"#1B4371\"\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","TextInput","TouchableWithoutFeedback","Keyboard","KeyboardAvoidingView","Platform","Alert","TouchableOpacity","Text","ImageBackground","jsx","_jsx","jsxs","_jsxs","Form","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","mail","setMail","_useState5","_useState6","password","setPassword","nameHandler","text","mailHandler","passwordHandler","handleSubmit","alert","onPress","dismiss","children","style","styles","container","source","require","image","behavior","OS","formWrapper","value","onChangeText","placeholder","input","secureTextEntry","button","activeOpacity","buttonText","aside","create","flex","alignItems","justifyContent","backgroundColor","paddingTop","paddingBottom","borderTopRightRadius","borderTopLeftRadius","width","height","padding","borderWidth","borderColor","marginBottom","resizeMode","marginTop","borderRadius","fontStyle","lineHeight","color","fontFamily","textAlign"],"sources":["/Users/admin/Desktop/goit/react-native/Reacr-native-IOS/src/Screens/RegistrationScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  TouchableWithoutFeedback,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  Alert,\n  TouchableOpacity,\n  Text,\n  ImageBackground,\n} from \"react-native\";\n\nexport default function Form() {\n  const [name, setName] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const nameHandler = (text) => setName(text);\n  const mailHandler = (text) => setMail(text);\n  const passwordHandler = (text) => setPassword(text);\n\n  const handleSubmit = () => {\n    Alert.alert(\"Credentials\", `${name} ${mail} ${password}`);\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View style={styles.container}>\n      <ImageBackground\n          source={require(\"../../assets/photo-BG-2x.jpg\")}\n          style={styles.image}\n        >\n        \n        <KeyboardAvoidingView\n          behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n        >\n            <View\n                style={styles.formWrapper}\n              >\n            <Text>Регистрация</Text>\n          <TextInput\n            value={name}\n            onChangeText={nameHandler}\n            placeholder=\"Логин\"\n            style={styles.input}\n          />\n          <TextInput\n            value={mail}\n            onChangeText={mailHandler}\n            placeholder=\"Адрес электронной почты\"\n            style={styles.input}\n          />\n          <TextInput\n            value={password}\n            onChangeText={passwordHandler}\n            placeholder=\"Пароль\"\n            secureTextEntry={true}\n            style={styles.input}\n          />\n          <TouchableOpacity\n                    style={styles.button}\n                    activeOpacity={0.8}\n                    onPress={handleSubmit}\n                  >\n                    <Text style={styles.buttonText}>Зарегистрироваться</Text>\n                    <TouchableOpacity>\n                    <Text style={styles.aside}>Уже есть аккаунт? Войти</Text>\n                  </TouchableOpacity>\n            </TouchableOpacity>\n          </View>\n        </KeyboardAvoidingView>\n        \n        \n        </ImageBackground>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n   \n  },\n  formWrapper: {\n     alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#ecf0f1\",\n    paddingTop: 150,\n    paddingBottom: 150,\n    // paddingLeft: 16,\n    // paddingRight: 16,\n    backgroundColor: \"#FFFFFF\",\n    borderTopRightRadius: 25,\n    borderTopLeftRadius: 25,\n    justifyContent: \"center\",\n    // height: '80%',\n  },\n  input: {\n    width: 300,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"black\",\n    marginBottom: 10,\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    width: 300,\n    marginTop: 43,\n    backgroundColor: \"#FF6C00\",\n    height: 61,\n    borderRadius: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  buttonText: {\n    fontStyle: \"normal\",\n    lineHeight: 19,\n    color: \"#FFFFFF\",\n  },\n  aside: {\n    fontFamily: \"RobotoRegular\",\n    fontStyle: \"normal\",\n    lineHeight: 19,\n    marginTop: 16,\n    textAlign: \"center\",\n    color: \"#1B4371\",\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}